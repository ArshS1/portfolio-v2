import Head from "next/head";
import { useRouter } from "next/router";
import { createClient } from "next-sanity";
import PortableText from "react-portable-text";
import imageUrlBuilder from "@sanity/image-url";

const Post = ({ blog }) => {
  // use router to read the url and fetch the right blog 
  const router = useRouter();
  const { slug } = router.query;
  const client = createClient({
    projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
    dataset: process.env.NEXT_PUBLIC_SANITY_DATASET,
    useCdn: false,
  });
  const builder = imageUrlBuilder(client);

  const convertDate = new Date(blog.createdAt); 

  return (
    <>
      <Head>
        <title>Arsh's Site | {blog.title}</title>
        <meta name="description" content="Generated by nest app" />
        <link rel="shortcut icon" href="/assets/secondIcon.svg" />
      </Head>
      <br />
      <br />
      <br />
      <br />
      <div className="flex items-center justify-center flex-col">
        <div className="mt-5 ">
          {/* <Image > */}
          <img
            src={blog.blogImage ? builder.image(blog.blogImage).url() : ""}
            className="object-fit h-40 md:h-60"
            alt=""
          />
        </div>
        <p className="uppercase text-sm tracking-widest text-gray-600 mt-1">
          {blog.blogImage.caption}
        </p>
        <div className="mt-4 uppercase text-3xl tracking-widest text-[#f76c6c]">
          {blog.title}
        </div> 
        <div>
          <div className="mt-2 py-2 text-gray-600 text-xl w-[90vw] lg:w-[70vw] text-center">
            <PortableText
              // Pass in block content straight from Sanity.io
              content={blog.content}
              projectId="exkzudo9"
              dataset="production"
              // Optionally override marks, decorators, blocks, etc. in a flat
              // structure without doing any gymnastics
              serializers={{
                h1: (props) => <h1 style={{ color: "red" }} {...props} />,
                li: ({ children }) => (
                  <li className="special-list-item">{children}</li>
                ),
              }}
            />
          </div>
        </div>

            <div class="flex items-center mt-2">
      <img class="w-10 h-10 rounded-full mr-4 border-2" src="/assets/cartoon.png" alt="Avatar of a random" />
      <div class="text-sm">
        <p class="text-gray-900 leading-none">Arshdeep Singh</p>
        <p class="text-gray-600">{convertDate.getMonth() + "/" + convertDate.getDate() + "/" + convertDate.getFullYear()}</p>
      </div>
    </div></div>
      <div className="fixed bottom-0 left-[50%] translate-x-[-50%] mb-5">
        <a
          href="/blogs"
          class="relative inline-flex items-center justify-start py-3 pl-4 pr-12 overflow-hidden font-semibold text-[#f76c6c] transition-all duration-150 ease-in-out rounded hover:pl-10 hover:pr-6 group mt-5"
        >
          <>
            <span class="absolute bottom-0 left-0 w-full h-1 transition-all duration-150 ease-in-out bg-[#f76c6c] group-hover:h-full"></span>
            <span class="absolute right-0 pr-4 duration-200 ease-out group-hover:translate-x-12">
              <svg
                class="w-5 h-5 text-[#f76c6c]"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  strokeWidth="2"
                  d="M14 5l7 7m0 0l-7 7m7-7H3"
                ></path>
              </svg>
            </span>
            <span class="absolute left-0 pl-2.5 -translate-x-12 group-hover:translate-x-0 ease-out duration-200">
              <svg
                class="w-5 h-5 text-white"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M14 5l7 7m0 0l-7 7m7-7H3"
                ></path>
              </svg>
            </span>
            <span class="relative w-full text-left transition-colors duration-200 ease-in-out group-hover:text-white tracking-widest uppercase">
              Other blogs
            </span>
          </>
        </a>
      </div>

      <script
        dangerouslySetInnerHTML={{
          __html: `
document.querySelector("body").addEventListener("mousemove", eyeball)
function eyeball() {
  const eye = document.querySelectorAll(".eye");
  eye.forEach(function(eye) {
    let x = (eye.getBoundingClientRect().left) + (eye.clientWidth / 2);
    let y = (eye.getBoundingClientRect().top) + (eye.clientHeight / 2);
    let radian = Math.atan2(event.pageX - x, event.pageY - y);
    let rotation = (radian * (180 / Math.PI) * -1) + 270;
    eye.style.transform = "rotate("+rotation+"deg)"; 
  })
}
        `,
        }}
      />
    </>
  );
};

export default Post;

// implement SSR for fast loading
export async function getServerSideProps(context) {
  const { slug } = context.query;

  const client = createClient({
    projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
    dataset: process.env.NEXT_PUBLIC_SANITY_DATASET,
    useCdn: false,
  });

  const query = `*[_type == "blog" && slug.current == '${slug}'][0]`;
  const blog = await client.fetch(query);
  return {
    props: {
      blog,
    },
  };
}
